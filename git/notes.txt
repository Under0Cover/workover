=========================================================================================
--- DEPOIS DO GIT INSTALADO ---
=========================================================================================




=========================================================================================
PODEMOS CONFIRMAR QUE O GIT FOI INSTALADO NO SISTEMA OPERACIONAL USANDO O COMANDO:
	-> GIT --VERSION

O RETORNO SERÁ A VERSÃO INSTALADA NO SISTEMA OPERACIONAL


=========================================================================================
* PARA CONFERIR ALGUNS COMANDOS DO GIT BASTA UTILIZAR:
	-> GIT

O RETORNO SERÁ UMA SÉRIE DE COMANDOS E ALGUMAS EXPLICAÇÕES BÁSICAS SOBRE ELES
=========================================================================================



=========================================================================================
--- APÓS VISUALIZAR ESSAS INFORMAÇÕES PASSAREMOS A INICIAR A UTILIZAÇÃO DAS FUNCIONALIDADES DO GIT. IREMOS SELECIONAR UMA PASTA QUALQUER, DE PREFERÊNCIA NOVA; E DENTRO DELA IREMOS CRIAR NOSSO PRIMEIRO REPOSITÓRIO GIT ---

* MKDIR		-> CRIAR PASTA OU ARQUIVO
* LS			-> EXIBIR CONTEÚDO DA PASTA
* CD			-> PRÉFIXO PARA ALTERAR ENTRE PASTAS
* CLEAR		-> COMANDO DE LIMPAR A TELA

* HÁ MUITOS OUTROS


=========================================================================================
--- DENTRO DA PASTA DESEJADA ---

O PRIMEIRO OBJETIVO É INICIAR O REPOSITÓRIO DENTRO DESTA PASTA. PARA ISSO, VAMOS UTILIZAR O COMANDO:

	-> GIT INIT

O RETORNO SERÁ UMA INFORMAÇÃO DIZENDO QUE FOI INICIALIZADO UM REPOSITÓRIO GIT VAZIO DENTRO DO CAMINHO DA PASTA
=========================================================================================
--- PRIMEIRAS INFORMAÇÕES ---

TODAS AS VEZES QUE QUISERMOS SABER A SITUAÇÃO DO NOSSO REPOSITÓRIO, NOS PODEMOS UTILIZAR DE UM COMANDO PARA RECEBER ESSAS INFORMAÇÕES, O COMANDO:

	-> GIT STATUS

O RETORNO DESSE COMANDO VAI DEPENDER DA ATUAL SITUAÇÃO DO SEU REPOSITÓRIO. NESTE MOMENTO, COMO ESTAMOS INICIANDO UM REPOSITÓRIO NOVO, O RETORNO TRARÁ POUCAS INFORMAÇÕES. O RETORNO TRARÁ O NOME DA BRANCH* E AS ALTERAÇÕES OCORRIDAS. NO PRIMEIRO MOMENTO HAVERÁ UM AVISO DIZENDO QUE NÃO HÁ NADA PARA COMITAR, POR NÃO TER HAVIDO NENHUMA ALTERAÇÃO. E AINDA HÁ A SUGESTÃO DE CRIAR OU COPIAR ALGUM ARQUIVO E UTILIZAR OUTRO COMANDO DO GIT PARA SER RASTREADO

* VEREMOS MAIS INFORMAÇÕES SOBRE BRANCHS MAIS PRA FRENTE, MAS PARA TER UMA BASE; BRANCH TEM A MESMA REFERÊNCIA DO QUE UMA PASTA DO WINDOWS.
=========================================================================================
PARA FINS TÉCNICOS, NESSE MOMENTO, TODOS OS SEUS ARQUIVOS SÃO ARQUIVOS LOCAIS, POIS ELES AINDA NÃO FORAM RASTREADOS PELO GIT, OS ARQUIVOS SÓ IRAM PARA O SERVIDOR NO MOMENTO DO COMIT. TODO O TRABALHO É FEITO REMOTO E SÓ DEPOIS, ENTÃO, ELES VÃO PARA O SERVIDOR. NÃO HÁ CONEXÃO. SÓ HÁ UMA TRANSAÇÃO FEITA EM UM MOMENTO DEFINIDO.
=========================================================================================
--- BRANCH ---

O QUE É UMA BRANCH?
	-> BRANCH É UM DIRETÓRIO, UMA PASTA, UM "CAMINHO" ONDE ESTÃO TODOS OS SEUS ARQUIVOS. PRA EXEMPLIFICAR O MUNDO REAL, AS EMPRESAS POSSUEM MAIS DE UMA BRANCH DO MESMO PRODUTO. PODE TER UMA BRANCH DESTINADA PARA OS DESENVOLVEDORES TRABALHAREM, OUTRA BRANCH PARA QUANDO O PRODUTO FOR FINALIZADO E PRECISAR PASSAR POR TESTES E UMA OUTRA BRANCH PARA QUANDO FOR ENVIADO PARA OS CLIENTES UTILIZAREM. NÃO EXISTE LIMITES DE BRANCH, MAS DEVE-SE TOMAR CUIDADO PRA NÃO VIRAR BAGUNÇA
=========================================================================================
--- APÓS CRIAR OU ADICIONAR UM NOVO ARQUIVO NA SUA PASTA, VAMOS REFAZER ALGUNS PASSOS E ENTENDER AS MODIFICAÇÕES QUE ACONTECERAM. VAMOS COMEÇAR UTILIZANDO O STATUS PARA VERIFICAR QUAL A ATUAL SITUAÇÃO DOS ARQUIVOS.
	-> GIT STATUS

O RETORNO É PARECIDO COM O MESMO RETORNO DO STATUS ANTERIOR, PORÉM NOVAS INFORMAÇÕES SÃO MOSTRADAS. COM NOVOS ARQUIVOS NA PASTA O GIT CONSEGUE IDENTIFICAR QUE SÃO ARQUIVOS NOVOS. MAS ELES AINDA NÃO SÃO TRACKEADOS PELO GIT, OU SEJA, VOCÊ PODE FAZER MODIFICAÇÕES NESSES ARQUIVOS QUE NADA DISSO SERÁ ARMAZENADO. ELES ESTÃO NO ESTÁGIO DE 'UNTRACKED' E AINDA NÃO HÁ CONTROLE DE VERSÕES PARA ELES.

PARA QUE O GIT CONSIGA COMEÇAR A TRACKEAR ESSES ARQUIVOS, É NECESSÁRIO ADICIONAR OS ARQUIVOS AO GIT. E ISSO É FEITO COM O COMANDO:
	-> GIT ADD <file> (GIT ADD .)

A PARTIR DE AGORA, SE PUXARMOS NOVAMENTE O STATUS PARA VERIFICAR OS ARQUIVOS, PERCEBEREMOS QUE AGORA, OS ARQUIVO ESTÃO SENTRO TRACKEADOS. NO ENTANTO ELES AINDA NÃO ESTÃO NO SERVIDOR. AGORA OS ARQUIVOS ESTÃO ESPERANDO SEREM ENVIADOS. TIPO UM PRÉ-ENVIO. 

CASO NESSE MOMENTO, VOCÊ PERCEBA QUE ENVIOU ARQUIVOS ERRADOS OU SIMPLEMENTE NÃO QUER MAIS ENVIAR O ARQUIVO, VOCÊ TEM A OPÇÃO DE SE UTILIZAR DE UM OUTRO COMANDO.
	-> GIT RM --CACHED <file>

E QUANDO O COMANDO FOR UTILIZADO, O ARQUIVO VOLTA PARA O PRIMEIRO ESTÁGIO. ESSES ARQUIVO ESTÃO NOVAMENTE NA PARTE DO 'UNTRACKED'. PROCESSO QUE PODE SER CONFIRMADO ATRÁVES DO STATUS.

=========================================================================================
--- DEPOIS DOS ARQUIVOS TRACKEADOS, VOCÊ PODERÁ FAZER O 'COMMIT'. O COMMIT NADA MAIS É DO QUE FAZER UMA VERSÃO DOS SEUS CÓDIGOS. QUANDO VOCÊ DER O COMMIT, PASSA A EXISTIR UM XEROX DE TODO O SEU CÓDIGO NO SERVIDOR.